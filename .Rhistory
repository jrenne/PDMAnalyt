# Compute (LT) real bond prices:
Model_TIPS <- Model
Model_TIPS$kappa_pi <- 1
Model_TIPS$kappa_y  <- 0
res_LTTIPS_prices <- compute_LTRF_bond_prices(Model_TIPS,maxH=maxH)
# Compute (LT) TIPS bond prices:
Model_GDPLB <- Model
Model_GDPLB$kappa_pi <- 1
Model_GDPLB$kappa_y  <- 1
res_LTGDPLB_prices   <- compute_LTRF_bond_prices(Model_GDPLB,maxH=maxH)
stat_distri <- compute_stat_distri(Model)
nominal_yds <- res_LTnominal_prices$all_LT_rth
TIPS_yds    <- res_LTTIPS_prices$all_LT_rth
GDPLB_yds   <- res_LTGDPLB_prices$all_LT_rth
avg_nominal_yds <- t(stat_distri) %*% nominal_yds
avg_TIPS_yds    <- t(stat_distri) %*% TIPS_yds
avg_GDPLB_yds   <- t(stat_distri) %*% GDPLB_yds
avg_nominal_returns <- t(stat_distri) %*% res_LTnominal_prices$all_LT_ExpReturn_th
avg_TIPS_returns    <- t(stat_distri) %*% res_LTTIPS_prices$all_LT_ExpReturn_th
avg_GDPLB_returns   <- t(stat_distri) %*% res_LTGDPLB_prices$all_LT_ExpReturn_th
Var_nominal_yds <- t(stat_distri) %*% res_LTnominal_prices$all_LT_rth^2 - avg_nominal_yds^2
Var_TIPS_yds    <- t(stat_distri) %*% res_LTTIPS_prices$all_LT_rth^2    - avg_TIPS_yds^2
Var_GDPLB_yds   <- t(stat_distri) %*% res_LTGDPLB_prices$all_LT_rth^2   - avg_GDPLB_yds^2
Std_nominal_yds <- sqrt(Var_nominal_yds)
Std_TIPS_yds    <- sqrt(Var_TIPS_yds)
Std_GDPLB_yds   <- sqrt(Var_GDPLB_yds)
exp_log_nominal_returns <- log(res_LTnominal_prices$all_LT_ExpReturn_th)
exp_log_TIPS_returns    <- log(res_LTTIPS_prices$all_LT_ExpReturn_th)
exp_log_GDPLB_returns   <- log(res_LTGDPLB_prices$all_LT_ExpReturn_th)
exp_annual_nominal_returns <- exp_log_nominal_returns/t(matrix(1:maxH,maxH,nb_m))
exp_annual_TIPS_returns    <- exp_log_TIPS_returns/t(matrix(1:maxH,maxH,nb_m))
exp_annual_GDPLB_returns   <- exp_log_GDPLB_returns/t(matrix(1:maxH,maxH,nb_m))
avg_annual_nominal_returns <- c(t(stat_distri) %*% exp_annual_nominal_returns)
avg_annual_TIPS_returns    <- c(t(stat_distri) %*% exp_annual_TIPS_returns)
avg_annual_GDPLB_returns   <- c(t(stat_distri) %*% exp_annual_GDPLB_returns)
Var_annual_nominal_returns <- t(stat_distri) %*% exp_annual_nominal_returns^2 - avg_annual_nominal_returns^2
Var_annual_TIPS_returns    <- t(stat_distri) %*% exp_annual_TIPS_returns^2    - avg_annual_TIPS_returns^2
Var_annual_GDPLB_returns   <- t(stat_distri) %*% exp_annual_GDPLB_returns^2   - avg_annual_GDPLB_returns^2
Std_annual_nominal_returns <- sqrt(Var_annual_nominal_returns)
Std_annual_TIPS_returns    <- sqrt(Var_annual_TIPS_returns)
Std_annual_GDPLB_returns   <- sqrt(Var_annual_GDPLB_returns)
nb_m <- dim(Model$Omega)[1]
# Compute (LT) nominal bond prices:
Model_nominal <- Model
Model_nominal$kappa_pi <- 0
Model_nominal$kappa_y  <- 0
res_LTnominal_prices <- compute_LTRF_bond_prices(Model_nominal,maxH=maxH)
# Compute (LT) real bond prices:
Model_TIPS <- Model
Model_TIPS$kappa_pi <- 1
Model_TIPS$kappa_y  <- 0
res_LTTIPS_prices <- compute_LTRF_bond_prices(Model_TIPS,maxH=maxH)
# Compute (LT) TIPS bond prices:
Model_GDPLB <- Model
Model_GDPLB$kappa_pi <- 1
Model_GDPLB$kappa_y  <- 1
res_LTGDPLB_prices   <- compute_LTRF_bond_prices(Model_GDPLB,maxH=maxH)
stat_distri <- compute_stat_distri(Model)
nominal_yds <- res_LTnominal_prices$all_LT_rth
TIPS_yds    <- res_LTTIPS_prices$all_LT_rth
GDPLB_yds   <- res_LTGDPLB_prices$all_LT_rth
avg_nominal_yds <- t(stat_distri) %*% nominal_yds
avg_TIPS_yds    <- t(stat_distri) %*% TIPS_yds
avg_GDPLB_yds   <- t(stat_distri) %*% GDPLB_yds
avg_nominal_returns <- t(stat_distri) %*% res_LTnominal_prices$all_LT_ExpReturn_th
avg_TIPS_returns    <- t(stat_distri) %*% res_LTTIPS_prices$all_LT_ExpReturn_th
avg_GDPLB_returns   <- t(stat_distri) %*% res_LTGDPLB_prices$all_LT_ExpReturn_th
Var_nominal_yds <- t(stat_distri) %*% res_LTnominal_prices$all_LT_rth^2 - avg_nominal_yds^2
Var_TIPS_yds    <- t(stat_distri) %*% res_LTTIPS_prices$all_LT_rth^2    - avg_TIPS_yds^2
Var_GDPLB_yds   <- t(stat_distri) %*% res_LTGDPLB_prices$all_LT_rth^2   - avg_GDPLB_yds^2
Std_nominal_yds <- sqrt(Var_nominal_yds)
Std_TIPS_yds    <- sqrt(Var_TIPS_yds)
Std_GDPLB_yds   <- sqrt(Var_GDPLB_yds)
exp_log_nominal_returns <- log(res_LTnominal_prices$all_LT_ExpReturn_th)
exp_log_TIPS_returns    <- log(res_LTTIPS_prices$all_LT_ExpReturn_th)
exp_log_GDPLB_returns   <- log(res_LTGDPLB_prices$all_LT_ExpReturn_th)
exp_annual_nominal_returns <- exp_log_nominal_returns/t(matrix(1:maxH,maxH,nb_m))
exp_annual_TIPS_returns    <- exp_log_TIPS_returns/t(matrix(1:maxH,maxH,nb_m))
exp_annual_GDPLB_returns   <- exp_log_GDPLB_returns/t(matrix(1:maxH,maxH,nb_m))
avg_annual_nominal_returns <- c(t(stat_distri) %*% exp_annual_nominal_returns)
avg_annual_TIPS_returns    <- c(t(stat_distri) %*% exp_annual_TIPS_returns)
avg_annual_GDPLB_returns   <- c(t(stat_distri) %*% exp_annual_GDPLB_returns)
Var_annual_nominal_returns <- t(stat_distri) %*% exp_annual_nominal_returns^2 - avg_annual_nominal_returns^2
Var_annual_TIPS_returns    <- t(stat_distri) %*% exp_annual_TIPS_returns^2    - avg_annual_TIPS_returns^2
Var_annual_GDPLB_returns   <- t(stat_distri) %*% exp_annual_GDPLB_returns^2   - avg_annual_GDPLB_returns^2
Std_annual_nominal_returns <- sqrt(Var_annual_nominal_returns)
Std_annual_TIPS_returns    <- sqrt(Var_annual_TIPS_returns)
Std_annual_GDPLB_returns   <- sqrt(Var_annual_GDPLB_returns)
source("~/Dropbox/Research/PDMAnalyt/tempo_demand_supply.R", echo=TRUE)
RES <- prepare_returns_yds(Model,maxH)
source("~/Dropbox/Research/PDMAnalyt/procedures/proc_toymodel.R", echo=TRUE)
nb_m <- dim(Model$Omega)[1]
# Compute (LT) nominal bond prices:
Model_nominal <- Model
Model_nominal$kappa_pi <- 0
Model_nominal$kappa_y  <- 0
res_LTnominal_prices <- compute_LTRF_bond_prices(Model_nominal,maxH=maxH)
# Compute (LT) real bond prices:
Model_TIPS <- Model
Model_TIPS$kappa_pi <- 1
Model_TIPS$kappa_y  <- 0
res_LTTIPS_prices <- compute_LTRF_bond_prices(Model_TIPS,maxH=maxH)
# Compute (LT) TIPS bond prices:
Model_GDPLB <- Model
Model_GDPLB$kappa_pi <- 1
Model_GDPLB$kappa_y  <- 1
res_LTGDPLB_prices   <- compute_LTRF_bond_prices(Model_GDPLB,maxH=maxH)
stat_distri <- compute_stat_distri(Model)
nominal_yds <- res_LTnominal_prices$all_LT_rth
TIPS_yds    <- res_LTTIPS_prices$all_LT_rth
GDPLB_yds   <- res_LTGDPLB_prices$all_LT_rth
avg_nominal_yds <- t(stat_distri) %*% nominal_yds
avg_TIPS_yds    <- t(stat_distri) %*% TIPS_yds
avg_GDPLB_yds   <- t(stat_distri) %*% GDPLB_yds
avg_nominal_returns <- t(stat_distri) %*% res_LTnominal_prices$all_LT_ExpReturn_th
avg_TIPS_returns    <- t(stat_distri) %*% res_LTTIPS_prices$all_LT_ExpReturn_th
avg_GDPLB_returns   <- t(stat_distri) %*% res_LTGDPLB_prices$all_LT_ExpReturn_th
Var_nominal_yds <- t(stat_distri) %*% res_LTnominal_prices$all_LT_rth^2 - avg_nominal_yds^2
Var_TIPS_yds    <- t(stat_distri) %*% res_LTTIPS_prices$all_LT_rth^2    - avg_TIPS_yds^2
Var_GDPLB_yds   <- t(stat_distri) %*% res_LTGDPLB_prices$all_LT_rth^2   - avg_GDPLB_yds^2
Std_nominal_yds <- sqrt(Var_nominal_yds)
Std_TIPS_yds    <- sqrt(Var_TIPS_yds)
Std_GDPLB_yds   <- sqrt(Var_GDPLB_yds)
exp_log_nominal_returns <- log(res_LTnominal_prices$all_LT_ExpReturn_th)
exp_log_TIPS_returns    <- log(res_LTTIPS_prices$all_LT_ExpReturn_th)
exp_log_GDPLB_returns   <- log(res_LTGDPLB_prices$all_LT_ExpReturn_th)
exp_annual_nominal_returns <- exp_log_nominal_returns/t(matrix(1:maxH,maxH,nb_m))
exp_annual_TIPS_returns    <- exp_log_TIPS_returns/t(matrix(1:maxH,maxH,nb_m))
exp_annual_GDPLB_returns   <- exp_log_GDPLB_returns/t(matrix(1:maxH,maxH,nb_m))
avg_annual_nominal_returns <- c(t(stat_distri) %*% exp_annual_nominal_returns)
avg_annual_TIPS_returns    <- c(t(stat_distri) %*% exp_annual_TIPS_returns)
avg_annual_GDPLB_returns   <- c(t(stat_distri) %*% exp_annual_GDPLB_returns)
Var_annual_nominal_returns <- t(stat_distri) %*% exp_annual_nominal_returns^2 - avg_annual_nominal_returns^2
Var_annual_TIPS_returns    <- t(stat_distri) %*% exp_annual_TIPS_returns^2    - avg_annual_TIPS_returns^2
Var_annual_GDPLB_returns   <- t(stat_distri) %*% exp_annual_GDPLB_returns^2   - avg_annual_GDPLB_returns^2
Std_annual_nominal_returns <- sqrt(Var_annual_nominal_returns)
Std_annual_TIPS_returns    <- sqrt(Var_annual_TIPS_returns)
Std_annual_GDPLB_returns   <- sqrt(Var_annual_GDPLB_returns)
Var_GDPLB_yds
stat_distri
Var_nominal_yds <- t(stat_distri) %*% nominal_yds^2 - avg_nominal_yds^2
Var_TIPS_yds    <- t(stat_distri) %*% TIPS_yds^2    - avg_TIPS_yds^2
Var_GDPLB_yds   <- t(stat_distri) %*% GDPLB_yds^2   - avg_GDPLB_yds^2
Var_GDPLB_yds
t(stat_distri) %*% GDPLB_yds
t(stat_distri) %*% GDPLB_yds^2   - avg_GDPLB_yds^2
t(stat_distri) %*% (GDPLB_yds^2)   - avg_GDPLB_yds^2
avg_GDPLB_yds
GDPLB_yds
Var_GDPLB_yds
source("~/Dropbox/Research/PDMAnalyt/tempo_demand_supply.R", echo=TRUE)
source("~/Dropbox/Research/PDMAnalyt/tempo_demand_supply.R", echo=TRUE)
source("~/Dropbox/Research/PDMAnalyt/tempo_demand_supply.R", echo=TRUE)
source("~/Dropbox/Research/PDMAnalyt/tempo_demand_supply.R", echo=TRUE)
source("~/Dropbox/Research/PDMAnalyt/tempo_demand_supply.R", echo=TRUE)
source("~/Dropbox/Research/PDMAnalyt/tempo_demand_supply.R", echo=TRUE)
View(Targets)
source("~/Dropbox/Research/PDMAnalyt/tempo_demand_supply.R", echo=TRUE)
source("~/Dropbox/Research/PDMAnalyt/tempo_demand_supply.R", echo=TRUE)
source("~/Dropbox/Research/PDMAnalyt/tempo_demand_supply.R", echo=TRUE)
source("~/Dropbox/Research/PDMAnalyt/tempo_demand_supply.R", echo=TRUE)
source("~/Dropbox/Research/PDMAnalyt/tempo_demand_supply.R", echo=TRUE)
source("~/Dropbox/Research/PDMAnalyt/procedures/proc_toymodel.R", echo=TRUE)
source("~/Dropbox/Research/PDMAnalyt/procedures/proc_toymodel.R", echo=TRUE)
source("~/Dropbox/Research/PDMAnalyt/Run_PDM.R", echo=TRUE)
load(file="results/res_12082024.Rdat")
source("~/Dropbox/Research/PDMAnalyt/Run_PDM.R", echo=TRUE)
Model$chi
source("~/Dropbox/Research/PDMAnalyt/tempo_demand_supply.R", echo=TRUE)
Model <- Model_Demand
res_stat_distri_and_rbar <- compute_stat_distri_and_rbar(Model)
Model_nominal$kappa_pi <- 0
Model_nominal$kappa_y  <- 0
Model_nominal$chi <- chi / exp(Model_nominal$kappa_pi*mean_pi + Model_nominal$kappa_y*mean_y)
res_stat_distri_and_rbar <- compute_stat_distri_and_rbar(Model)
res_stat_distri_and_rbar <- compute_stat_distri_and_rbar(Model)
res_stat_distri <- compute_stat_distri(Model)
stat_distri <- res_stat_distri_and_rbar$stat_distri
mean_pi <- c(t(stat_distri) %*% Model$mu_pi)
stat_distri
Model <- Model_Demand
res_stat_distri <- compute_stat_distri(Model)
stat_distri <- res_stat_distri_and_rbar$stat_distri
mean_pi <- c(t(stat_distri) %*% Model$mu_pi)
stat_distri <- compute_stat_distri(Model)
mean_pi <- c(t(stat_distri) %*% Model$mu_pi)
mean_y  <- c(t(stat_distri) %*% Model$mu_y)
source("~/Dropbox/Research/PDMAnalyt/procedures/proc_toymodel.R", echo=TRUE)
Models <- prepare_and_solve_3(Model_Demand,
all_d,all_rr,all_eps,proba_eps)
Model_Demand$chi <- .8
Model_Demand$mu_eta <- 1*Model_Demand$mu_y
Models <- prepare_and_solve_3(Model_Demand,
all_d,all_rr,all_eps,proba_eps)
load(file="results/res_12082024.Rdat")
Model$beta
Model$alpha
Model$d_star
Model_Demand$chi    <- .8
Model_Demand$mu_eta <- 1*Model_Demand$mu_y
Model_Demand$beta   <- .1
Model_Demand$alpha  <- .3
Model_Demand$d_star <- .8
Model_Demand$s_star <- .05
Models <- prepare_and_solve_3(Model_Demand,
all_d,all_rr,all_eps,proba_eps)
Model_Demand$chi    <- .8
Model_Demand$mu_eta <- 1*Model_Demand$mu_y
Model_Demand$beta   <- .1
Model_Demand$alpha  <- .3
Model_Demand$d_star <- .8
Model_Demand$s_star <- .05
Model_Demand$RR     <- .5
Models <- prepare_and_solve_3(Model_Demand,
all_d,all_rr,all_eps,proba_eps)
Model_Demand$chi    <- .8
Model_Demand$mu_eta <- 1*Model_Demand$mu_y
Model_Demand$beta   <- .1
Model_Demand$alpha  <- .3
Model_Demand$d_star <- .8
Model_Demand$s_star <- .05
Model_Demand$RR     <- .5
Model_Demand$nu_pi  <- 0
Model_Demand$nu_y   <- 0
Models <- prepare_and_solve_3(Model_Demand,
all_d,all_rr,all_eps,proba_eps)
strat_nominal <- run_strategy(Models$Model_solved_nominal,maxH=10)
strat_TIPS    <- run_strategy(Models$Model_solved_TIPS,maxH=10)
strat_GDPLB   <- run_strategy(Models$Model_solved_GDPLB,maxH=10)
M <- rbind(c(strat_nominal$mean_d,strat_TIPS$mean_d,strat_GDPLB$mean_d),
c(strat_nominal$stdv_d,strat_TIPS$stdv_d,strat_GDPLB$stdv_d),
c(strat_nominal$mean_rr,strat_TIPS$mean_rr,strat_GDPLB$mean_rr),
c(strat_nominal$stdv_rr,strat_TIPS$stdv_rr,strat_GDPLB$stdv_rr),
c(strat_nominal$mean_Delta_d,strat_TIPS$mean_Delta_d,strat_GDPLB$mean_Delta_d),
c(strat_nominal$stdv_Delta_d,strat_TIPS$stdv_Delta_d,strat_GDPLB$stdv_Delta_d))
colnames(M) <- c("Nominal","TIPS","GDPLB")
rownames(M) <- c("Mean d","Stdv d",
"Mean r","Stdv r",
"Mean D(d)","Stdv D(d)")
print(M)
source("~/Dropbox/Research/PDMAnalyt/tempo_demand_supply.R", echo=TRUE)
print(M)
load(file="results/res_12082024.Rdat")
Model$sigma_eps
Model$mu_eta
Model$mu_pi
Model$mu_y
compute_stat_distri(Model)
source("~/Dropbox/Research/PDMAnalyt/calibrate_alpha_beta.R", echo=TRUE)
nb_m
stat_distri
res_LTnominal_prices$all_LT_rth
res_LTnominal_prices <- compute_LTRF_bond_prices(Model,maxH = 10)
stat_distri <- res_stat_distri_and_rbar$stat_distri
q <- c(t(stat_distri) %*% res_LTnominal_prices$all_LT_rth[,10])
D <- 6
Model$chi <- 1 + q - 1/D
Model$chi
source("~/Dropbox/Research/PDMAnalyt/calibrate_alpha_beta.R", echo=TRUE)
Model$alpha  <- best$alpha
Model$beta   <- best$beta
Model$d_star <- best$d_star
best$alpha
best$beta
best$d_star
plot(all_d,best$distri_d,type="l")
save(Model,file="results/res_12082024.Rdat")
PD_TIPS <- compute_proba_def(maxH=maxH,
indicators_x  = res0_TIPS$indicators_x,
all_proba_def = res0_TIPS$all_proba_def,
Probas        = res0_TIPS$Probas)
# Compute bond prices (no default):
res_LTprices <- compute_LTRF_bond_prices(Model_solved$Model,maxH)
# Compute average expected returns (no default):
avgLT_ExpReturns  <- c(t(Model_solved$stat_distri) %*% res_LTprices$all_LT_ExpReturn_th)
# Compute probabilities of default:
PD <- compute_proba_def(maxH=maxH,
indicators_x  = Model_solved$indicators_x,
all_proba_def = Model_solved$all_proba_def,
Probas        = Model_solved$Probas)
PD
dim(PD)
avg_PD <- t(p) %*% PD
dim(p)
dim(PD)
source("~/Dropbox/Research/PDMAnalyt/procedures/proc_toymodel.R", echo=TRUE)
strat_nominal <- run_strategy(Models$Model_solved_nominal,maxH=10)
source("~/Dropbox/Research/PDMAnalyt/procedures/proc_toymodel.R", echo=TRUE)
strat_nominal <- run_strategy(Models$Model_solved_nominal,maxH=10)
strat_nominal$avg_PD
strat_nominal <- run_strategy(Models$Model_solved_nominal,maxH=10)
strat_TIPS    <- run_strategy(Models$Model_solved_TIPS,maxH=10)
strat_GDPLB   <- run_strategy(Models$Model_solved_GDPLB,maxH=10)
M <- rbind(c(strat_nominal$mean_d,strat_TIPS$mean_d,strat_GDPLB$mean_d),
c(strat_nominal$stdv_d,strat_TIPS$stdv_d,strat_GDPLB$stdv_d),
c(strat_nominal$mean_rr,strat_TIPS$mean_rr,strat_GDPLB$mean_rr),
c(strat_nominal$stdv_rr,strat_TIPS$stdv_rr,strat_GDPLB$stdv_rr),
c(strat_nominal$mean_Delta_d,strat_TIPS$mean_Delta_d,strat_GDPLB$mean_Delta_d),
c(strat_nominal$stdv_Delta_d,strat_TIPS$stdv_Delta_d,strat_GDPLB$stdv_Delta_d),
c(strat_nominal$avg_PD[maxH],strat_TIPS$avg_PD[maxH],strat_GDPLB$avg_PD[maxH]))
colnames(M) <- c("Nominal","TIPS","GDPLB")
rownames(M) <- c("Mean d","Stdv d",
"Mean r","Stdv r",
"Mean D(d)","Stdv D(d)","avg PD")
print(M)
source("~/Dropbox/Research/PDMAnalyt/Run_PDM.R", echo=TRUE)
Mchi09 <- M
source("~/Dropbox/Research/PDMAnalyt/Run_PDM.R", echo=TRUE)
Mchi09
M <- rbind(c(strat_nominal$mean_d,strat_TIPS$mean_d,strat_GDPLB$mean_d),
c(strat_nominal$stdv_d,strat_TIPS$stdv_d,strat_GDPLB$stdv_d),
c(strat_nominal$mean_rr,strat_TIPS$mean_rr,strat_GDPLB$mean_rr),
c(strat_nominal$stdv_rr,strat_TIPS$stdv_rr,strat_GDPLB$stdv_rr),
c(strat_nominal$stdv_Delta_d,strat_TIPS$stdv_Delta_d,strat_GDPLB$stdv_Delta_d),
c(strat_nominal$avg_PD[maxH],strat_TIPS$avg_PD[maxH],strat_GDPLB$avg_PD[maxH]))
colnames(M) <- c("Nominal","TIPS","GDPLB")
rownames(M) <- c("Mean d","Stdv d",
"Mean r","Stdv r",
"Stdv D(d)","avg PD")
M <- rbind(c(strat_nominal$mean_d,strat_TIPS$mean_d,strat_GDPLB$mean_d),
c(strat_nominal$stdv_d,strat_TIPS$stdv_d,strat_GDPLB$stdv_d),
c(strat_nominal$mean_rr,strat_TIPS$mean_rr,strat_GDPLB$mean_rr),
c(strat_nominal$stdv_rr,strat_TIPS$stdv_rr,strat_GDPLB$stdv_rr),
c(strat_nominal$stdv_Delta_d,strat_TIPS$stdv_Delta_d,strat_GDPLB$stdv_Delta_d),
c(strat_nominal$avg_PD[maxH],strat_TIPS$avg_PD[maxH],strat_GDPLB$avg_PD[maxH]))
colnames(M) <- c("Nominal","TIPS","GDPLB")
rownames(M) <- c("Mean d","Stdv d",
"Mean r","Stdv r",
"Stdv D(d)","avg PD")
print(M)
source("~/Dropbox/Research/PDMAnalyt/main.R", echo=TRUE)
Model$d_star
source("~/Dropbox/Research/PDMAnalyt/make_grids.R", echo=TRUE)
source("~/Dropbox/Research/PDMAnalyt/make_chart_fit.R", echo=TRUE)
# Standard deviations of measurement errors (for Hamilton filter):
std_Pi <- .01
std_Dy <- .01
std_nom_yd <- .008
source("~/Dropbox/Research/PDMAnalyt/make_chart_fit.R", echo=TRUE)
load(file="Data/data.Rda")
source("~/Dropbox/Research/PDMAnalyt/make_chart_fit.R", echo=TRUE)
source("~/Dropbox/Research/PDMAnalyt/make_chart_fit.R", echo=TRUE)
dev.off()
dev.off()
dev.off()
source("~/Dropbox/Research/PDMAnalyt/make_chart_fit.R", echo=TRUE)
source("~/Dropbox/Research/PDMAnalyt/Run_PDM.R", echo=TRUE)
source("make_grids.R")
Model$std_Pi <- .01
Model$std_Dy <- .01
Model$std_nom_yd <- .008
Model$sigma_eps <- .04
Model$mu_pi
Model$mu_y
save(Model,file="results/res_12082024.Rdat")
source("~/Dropbox/Research/PDMAnalyt/procedures/proc_toymodel.R", echo=TRUE)
source("~/Dropbox/Research/PDMAnalyt/procedures/proc_toymodel.R", echo=TRUE)
source("~/Dropbox/Research/PDMAnalyt/main.R", echo=TRUE)
source("~/Dropbox/Research/PDMAnalyt/estimation/run_estim.R", echo=TRUE)
source("~/Dropbox/Research/PDMAnalyt/procedures/proc_toymodel.R", echo=TRUE)
source("~/Dropbox/Research/PDMAnalyt/estimation/run_estim.R", echo=TRUE)
source("~/Dropbox/Research/PDMAnalyt/procedures/proc_toymodel.R", echo=TRUE)
source("~/Dropbox/Research/PDMAnalyt/estimation/run_estim.R", echo=TRUE)
algo <- "Nelder-Mead"
#algo <- "nlminb"
for(ii in 1:nb_loops){
for(algo in c("Nelder-Mead","nlminb")){
res.estim <- optimx(param,
#compute_distance,
#compute_loglik,
compute_total_distance,
targets = targets,
Model_ini = Model_ini,
method = algo,
control=
list(trace=1,
maxit=ifelse(algo=="Nelder-Mead",
maxit.NlMd,maxit.nlminb),
kkt = FALSE))
param     <- c(as.matrix(res.estim)[1:length(param)])
}
}
compute_total_distance(param,targets,Model_ini)
Model <- make_model(param,Model_ini)
source("make_chart_fit.R")
Model$std_Dy
source("~/Dropbox/Research/PDMAnalyt/make_grids.R", echo=TRUE)
nb_grid <- 25
source("~/Dropbox/Research/PDMAnalyt/make_grids.R", echo=TRUE)
source("~/Dropbox/Research/PDMAnalyt/procedures/proc_toymodel.R", echo=TRUE)
source("~/Dropbox/Research/PDMAnalyt/main.R", echo=TRUE)
source("~/Dropbox/Research/PDMAnalyt/make_chart_fit.R", echo=TRUE)
source("~/Dropbox/Research/PDMAnalyt/Run_PDM.R", echo=TRUE)
strat_nominal$avg_PD
source("~/Downloads/PDMAnalyt-main/main.R", echo=TRUE)
source("~/Downloads/PDMAnalyt-main/main.R", echo=TRUE)
source("~/Downloads/PDMAnalyt-main/main.R", echo=TRUE)
source("~/Dropbox/Research/PDMAnalyt/main.R", echo=TRUE)
Model$alpha
source("~/Dropbox/Research/PDMAnalyt/calibrate_alpha_beta.R", echo=TRUE)
avg_spreads
res_prices_nominal$all_rth
mean8res_prices_nominal$all_rth
mean(res_prices_nominal$all_rth)
mean(res_prices_nominal_RF$all_rth)
mean(Model_solved$all_proba_def)
source("~/Dropbox/Research/PDMAnalyt/Run_PDM.R", echo=TRUE)
Model$sigma_eps
Model$alpha
Model$beta
Model_solved_RF
Model_solved <- solve_ToyModel(all_d,all_rr,all_eps,proba_eps,
Model,nb_iter = nb_iter)
# Compute average of debt:
p <- compute_uncond_distri(Model_solved$indicators_x,Model_solved$Probas,1000)
distri_d  <- compute_distri_x(all_d,Model_solved$d,p)
mean_d    <- sum(distri_d * all_d)
# Compute nominal yields:
res_prices_nominal <- compute_bond_prices(Model_solved, maxH)
# Compute risk-free nominal yields:
Model_solved_RF    <- Model_solved
Model_solved_RF$RR <- 1
res_prices_nominal_RF <- compute_bond_prices(Model_solved_RF, maxH)
spreads <- res_prices_nominal$all_rth - res_prices_nominal_RF$all_rth
mean(spreads)
res_prices_nominal_RF <- compute_bond_prices(Model_solved_RF, maxH)
source("~/Dropbox/Research/PDMAnalyt/calibrate_alpha_beta.R", echo=TRUE)
source("~/Dropbox/Research/PDMAnalyt/calibrate_alpha_beta.R", echo=TRUE)
28 * 5 * .5 * .3
source("~/Dropbox/Research/PDMAnalyt/main.R", echo=TRUE)
source("~/Dropbox/Research/PDMAnalyt/estimation/run_estim.R", echo=TRUE)
source("~/Dropbox/Research/PDMAnalyt/estimation/run_estim.R", echo=TRUE)
source("~/Dropbox/Research/PDMAnalyt/estimation/run_estim.R", echo=TRUE)
source("~/Dropbox/Research/PDMAnalyt/estimation/run_estim.R", echo=TRUE)
source("~/Dropbox/Research/PDMAnalyt/estimation/run_estim.R", echo=TRUE)
source("~/Dropbox/Research/PDMAnalyt/estimation/run_estim.R", echo=TRUE)
source("~/Dropbox/Research/PDMAnalyt/estimation/run_estim.R", echo=TRUE)
source("~/Dropbox/Research/PDMAnalyt/estimation/run_estim.R", echo=TRUE)
source("~/Dropbox/Research/PDMAnalyt/estimation/run_estim.R", echo=TRUE)
targets
Model$gamma
Model$mu_y
source("~/Dropbox/Research/PDMAnalyt/estimation/run_estim.R", echo=TRUE)
source("~/Dropbox/Research/PDMAnalyt/estimation/run_estim.R", echo=TRUE)
source("~/Dropbox/Research/PDMAnalyt/estimation/run_estim.R", echo=TRUE)
source("~/Dropbox/Research/PDMAnalyt/estimation/run_estim.R", echo=TRUE)
source("~/Dropbox/Research/PDMAnalyt/estimation/run_estim.R", echo=TRUE)
source("~/Dropbox/Research/PDMAnalyt/calibrate_alpha_beta.R", echo=TRUE)
best$distance
save(Model,file="results/res_14082024.Rdat")
source("~/Dropbox/Research/PDMAnalyt/Run_PDM.R", echo=TRUE)
M
Model$s_star
load(file="results/res_14082024.Rdat")
Model$s_star
Model <- make_model(param,Model_ini)
Model$s_star
Model_ini
Model_ini$s_star
best$s_star
s_star
res_aux <- compute_determ_steady_state(Model,
indic_d_bar_from_s_star = 1,
d_bar = d_bar)
Model$s_star <- res_aux$s_star
save(Model,file="results/res_14082024.Rdat")
source("~/Dropbox/Research/PDMAnalyt/Run_PDM.R", echo=TRUE)
M
source("~/Dropbox/Research/PDMAnalyt/calibrate_alpha_beta.R", echo=TRUE)
best$distance
Model$s_star
save(Model,file="results/res_14082024.Rdat")
best$beta
best$alpha
source("~/Dropbox/Research/PDMAnalyt/Run_PDM.R", echo=TRUE)
M
Model$delta
kappa_pi
.99 - .01 * kappa_pi
source("~/Dropbox/Research/PDMAnalyt/Run_PDM.R", echo=TRUE)
M
source("~/Dropbox/Research/PDMAnalyt/Run_PDM.R", echo=TRUE)
M
source("~/Dropbox/Research/PDMAnalyt/Run_PDM.R", echo=TRUE)
M
Model$delta
Model$delta <- .99
source("~/Dropbox/Research/PDMAnalyt/Run_PDM.R", echo=TRUE)
M
Model$mu_eta
source("~/Dropbox/Research/PDMAnalyt/make.formula.fig.R", echo=TRUE)
source("~/Dropbox/Research/PDMAnalyt/make.illus.charts.R", echo=TRUE)
source_file <- "formula.pdf"
destination_folder <- "figures/"
# Use file.copy to copy the file
file_copied <- file.copy(from = source_file, to = destination_folder)
all_files <- list.files(path = "", full.names = TRUE)
all_files
all_files <- list.files(path = getwd(), full.names = TRUE)
all_files
# Filter files that start with "formula"
files_to_delete <- all_files[grepl("^formula", basename(all_files))]
# Remove the filtered files
file.remove(files_to_delete)
source("~/Dropbox/Research/PDMAnalyt/make.illus.charts.R", echo=TRUE)
source("~/Dropbox/Research/PDMAnalyt/make.illus.charts.R", echo=TRUE)
source("~/Dropbox/Research/PDMAnalyt/make.illus.charts.R", echo=TRUE)
source("~/Dropbox/Research/PDMAnalyt/make.illus.charts.R", echo=TRUE)
source("~/Dropbox/Research/PDMAnalyt/make.illus.charts.R", echo=TRUE)
source("~/Dropbox/Research/PDMAnalyt/make.illus.charts.R", echo=TRUE)
source("~/Dropbox/Research/PDMAnalyt/make.illus.charts.R", echo=TRUE)
source("~/Dropbox/Research/PDMAnalyt/make.illus.charts.R", echo=TRUE)
